.TH YAUML 1 2013-10-12

.SH NAME
.B yauml
- A script for generating UML diagrams from YAML file.

.SH SYNOPSYS
.B yauml [-t \fItemplate_file\fP] [-o \fIout_file\fP [-T\fItype\fP]] \fIfile.yaml\fP

.B yauml [-hv]

.\" DESCRIPTION
.SH DESCRIPTION
This program generates a formatted string from an YAML file according to the
dot programming language interpreted by \fBGraphviz\fP. The output can then be
used by \fBdot\fP in order to get a file in png, pdf or another file format
supported (see \fBdot\fP(1)). However, \fByauml\fP handles \fB-T\fP and
\fB-o\fP options just like \fBdot\fP. If those options are given, the program
will automatically call \fBdot\fP as a sub-process.

.\" OPTIONS
.SH OPTIONS

.TP
\fB-t, --template\fP \fItemplate_file\fP
The template file to use (default: \fBTEMPLATE_FILE\fP).
.TP
\fB-o, --out\fP \fIout_file\fP
The file to output the generated result (default: \fBstdout\fP).
.TP
\fB-T, --Type\fP \fIformat\fP
The type of file to generate (see \fBdot\fP(1)). Specifying this will
automatically pass the output of \fByauml\fP to \fBdot\fP. \fBThis option has
to be used with -o\fP.
.TP
\fB-h, --help\fP
Shows a help text on \fBstdout\fP.
.TP
\fB-v, --version\fP
Version of the program.

\" YAML format
.SH YAML format
The program will scan the YAML file for \fIclass\fP and \fIinterface\fP blocks
written like so:

.EE 
    - class: ClassName
      # rest of block

    - interface: InterfaceName
      # rest of block

.SS Class block
A class block can contain \fIattributes\fP, \fImethods\fP, \fIimplements\fP,
\fIispartof\fP, \fIiscontainedby\fP, \fIisassociatedto\fP and \fIinherits\fP
sub-block. For e.g:

.EE
    - class: A
      attributes:
      - att1
      - att2
      - ...
      methods:
      - method1()
      - method2()
      - ...
.P
Considering ths class \fBA\fP, the following could be added:

.EE
    - class: B
      inherits:
      - A
      ...
.P
This would mean that \fBB\fP inherits from \fBA\fP. The \fIispartof\fP, \fI
isassociatedto\fP, \fIiscontainedby\fP and \fIimplements\fP blocks would be
used exactly the same way as \fIinherits\fP. In order to specify the
\fBmultiplicity\fP of the entities involved in the relation:

.EE
    - class: B
    inherits:
    - A
    ispartof:
    - C [1..*] [1]
.P
where the first and second string between brackets respectively mean the
multiplicity of the child and the parent.

\fBAbstract\fP classes are written like so:

.EE
    - class: C { Abstract }
      methods:
      - method1() { Abstract }
      - method2()
      - ...

.SS Interface block
Same as a class block but only \fImethods\fP sub-blocks are treated.

.\" FILES
.SH FILES
.TP
\fBTEMPLATE_FILE\fP
/usr/share/yauml/template.dot

.P
This file is written accordingly to the \fBdot\fP programming language.
However, in order to properly use \fByauml\fP, it is required to place some
\fBflags\fP in the file so that the program finds where to inject the right
string at the right place. Those flags are the following:

.EE
    // CLASSES
    
    // INTERFACES
    
    // SIMPLE RELATIONS
    
    // ISCONTAINEDBY RELATIONS
    
    // ISPARTOF RELATIONS
    
    // USE RELATIONS
    
    // INHERIT RELATIONS

    // IMPLEMENT RELATIONS

    \" INSERT ALL FLAGS HERE

.P
All of these flags consist in a commented line containing the word "CLASSES" or
"INTERFACES" or ...  in capital letters (note that "// The CLASSES here" would
be valid too). The first occurence of each flags will be followed by the
respective string built from the YAML file.

.\" FILES
.SH AUTHORS
.TP
Written by
.IP \(bu
.\} 
Alexandre Blondin Massé <alexandre.blondin.masse@gmail.com>
.IP \(bu
.\} 
Simon Désaulniers <rostydela@gmail.com>

.\" SEE ALSO
.SH SEE ALSO
\fBdot\fP(1)
